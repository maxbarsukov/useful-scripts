#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

command_exists() {
    command -v "$1" >/dev/null 2>&1
}

install_wget() {
    echo -e "${YELLOW}Installing wget...${NC}"

    if command_exists apt-get; then
        sudo apt-get update && sudo apt-get install -y wget
    elif command_exists yum; then
        sudo yum install -y wget
    elif command_exists brew; then
        brew install wget
    elif command_exists pacman; then
        sudo pacman -Sy --noconfirm wget
    else
        echo -e "${RED}Failed to detect package manager. Please install wget manually.${NC}"
        exit 1
    fi

    if ! command_exists wget; then
        echo -e "${RED}Failed to install wget. Please install it manually.${NC}"
        exit 1
    fi
}

download_website() {
    local url="$1"
    local output_dir="$2"
    local user_agent="$3"
    local timeout="$4"
    local rate_limit="$5"
    local enable_wait="$6"

    # If output_dir not specified, use domain name
    if [ -z "$output_dir" ]; then
        output_dir=$(echo "$url" | awk -F/ '{print $3}')
        if [ -z "$output_dir" ]; then
            output_dir="website"
        fi
    fi

    echo -e "${GREEN}Downloading website ${YELLOW}$url${GREEN} to directory ${YELLOW}$output_dir${NC}"

    # Create directory if not exists
    mkdir -p "$output_dir"

    # Base wget command
    local cmd=(wget
        --recursive
        --page-requisites
        --adjust-extension
        --convert-links
        --restrict-file-names=windows
        --continue
        --html-extension
        --no-host-directories
        "--timeout=$timeout"
        --tries=3
        "--directory-prefix=$output_dir"
        --no-check-certificate
        --execute=robots=off
    )

    # Add wait options if enabled
    if [ "$enable_wait" = "true" ]; then
        cmd+=(--random-wait --wait=1)
        echo -e "${YELLOW}Wait between requests: Enabled${NC}"
    fi

    # Add user agent if specified
    if [ -n "$user_agent" ]; then
        cmd+=(--user-agent="$user_agent")
    else
        cmd+=(--user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36")
    fi

    # Add rate limit if specified
    if [ -n "$rate_limit" ]; then
        cmd+=(--limit-rate="$rate_limit")
    fi

    # Add URL
    cmd+=("$url")

    # Execute command
    if "${cmd[@]}"; then
        echo -e "\n${GREEN}Download completed successfully!${NC}"
        echo -e "${GREEN}Website saved to: ${YELLOW}$(realpath "$output_dir")${NC}"
    else
        echo -e "\n${RED}Error occurred while downloading the website${NC}"
        exit 1
    fi
}

main() {
    # Check if wget installed
    if ! command_exists wget; then
        echo -e "${YELLOW}wget not found. Attempting to install...${NC}"
        install_wget
    fi

    # Parse arguments
    local url=""
    local output_dir=""
    local user_agent=""
    local timeout=5
    local rate_limit=""
    local enable_wait="false"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            -o|--output)
                output_dir="$2"
                shift 2
                ;;
            -u|--user-agent)
                user_agent="$2"
                shift 2
                ;;
            -t|--timeout)
                timeout="$2"
                shift 2
                ;;
            -r|--rate-limit)
                rate_limit="$2"
                shift 2
                ;;
            -w|--wait)
                enable_wait="true"
                shift
                ;;
            *)
                if [[ -z "$url" ]]; then
                    url="$1"
                else
                    echo -e "${RED}Unknown parameter: $1${NC}"
                    exit 1
                fi
                shift
                ;;
        esac
    done

    # Check if URL provided
    if [[ -z "$url" ]]; then
        echo -e "${RED}Error: URL to download must be specified${NC}"
        echo "Usage: $0 [OPTIONS] URL"
        echo "Options:"
        echo "  -o, --output DIR      Output directory"
        echo "  -u, --user-agent UA   Custom User-Agent string"
        echo "  -t, --timeout SEC     Connection timeout in seconds (default: 5)"
        echo "  -r, --rate-limit RATE Download rate limit (e.g., 500k)"
        echo "  -w, --wait            Enable wait between requests (1s fixed + random delay)"
        exit 1
    fi

    download_website "$url" "$output_dir" "$user_agent" "$timeout" "$rate_limit" "$enable_wait"
}

main "$@"
